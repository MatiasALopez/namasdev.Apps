@using namasdev.Apps.Entidades.Valores;
@model namasdev.Apps.Entidades.Entidad
@{
    var clases = new
    {
        Metadata = string.Format("{0}Metadata", Model.Nombre)
    };
    var variables = new
    {
        Repositorio = "repositorio",
        UsuarioId = "usuarioId",
    };

    string textoPudo =
        Model.Nombre.EndsWith("s")
        ? "pudieron"
        : "pudo";

    string textoArticulo,
        textoOperacionSufijoGenero;
    if (Model.Nombre.EndsWith("as"))
    {
        textoArticulo = "las";
        textoOperacionSufijoGenero = "as";
    }
    else if (Model.Nombre.EndsWith("s"))
    {
        textoArticulo = "los";
        textoOperacionSufijoGenero = "os";
    }
    else if (Model.Nombre.EndsWith("a"))
    {
        textoArticulo = "la";
        textoOperacionSufijoGenero = "a";
    }
    else
    {
        textoArticulo = "el";
        textoOperacionSufijoGenero = "o";
    }
}
namespace @(Model.AplicacionVersion.Aplicacion.Nombre).Entidades.Metadata
{
    public class @clases.Metadata
    {
        public const string NOMBRE = "@Model.Nombre";
        public const string NOMBRE_PLURAL = "@Model.NombrePlural";

        public const string ETIQUETA = "@Model.Etiqueta";
        public const string ETIQUETA_PLURAL = "@Model.EtiquetaPlural";

        public class BD
        {
            public const string TABLA = "@Model.NombrePlural";
        @if (Model.PropiedadesDefault.IDPropiedadTipoId.HasValue)
        {
            <text>
            public const string ID = "@(Model.Nombre)Id";
            </text>
        }
        }

        public class Propiedades
        {
    @foreach(var p in Model.Propiedades)
    {
        if (p.EsId())
        {
            <text>
            public class Nombre
            {
                public const string ETIQUETA = "Nombre";
                public const int TAMAÑO_MAX = 100;
            }
            </text>
        }
        else
        {
            switch (p.PropiedadTipoId)
            {
                case PropiedadTipos.TEXTO:
            <text>
            public class @p.Nombre
            {
                public const string ETIQUETA = "@p.Etiqueta";
                public const int TAMAÑO_MAX = @p.EspecificacionesTexto.TamañoMaximo;
            }
            </text>
                    break;
                case PropiedadTipos.ENTERO:
            <text>
            public class @p.Nombre
            {
                public const string ETIQUETA = "@p.Etiqueta";
                public const int VALOR_MINIMO = @p.EspecificacionesEntero.ValorMinimo;
                public const int VALOR_MAXIMO = @p.EspecificacionesEntero.ValorMaximo;
            }
            </text>
                    break;
                case PropiedadTipos.ENTERO_CORTO:
            <text>
            public class @p.Nombre
            {
                public const string ETIQUETA = "@p.Etiqueta";
                public const int VALOR_MINIMO = @p.EspecificacionesEnteroCorto.ValorMinimo;
                public const int VALOR_MAXIMO = @p.EspecificacionesEnteroCorto.ValorMaximo;
            }
            </text>
                    break;
                case PropiedadTipos.ENTERO_LARGO:
            <text>
            public class @p.Nombre
            {
                public const string ETIQUETA = "@p.Etiqueta";
                public const int VALOR_MINIMO = @p.EspecificacionesEnteroLargo.ValorMinimo;
                public const int VALOR_MAXIMO = @p.EspecificacionesEnteroLargo.ValorMaximo;
            }
            </text>
                    break;
                case PropiedadTipos.DECIMAL:
            <text>
            public class @p.Nombre
            {
                public const string ETIQUETA = "@p.Etiqueta";
                public const int VALOR_MINIMO = @p.EspecificacionesDecimal.ValorMinimo;
                public const int VALOR_MAXIMO = @p.EspecificacionesDecimal.ValorMaximo;
                public const int DIGITOS_DECIMALES = @p.EspecificacionesDecimal.DigitosDecimales;
            }
            </text>
                    break;
                case PropiedadTipos.DECIMAL_LARGO:
            <text>
            public class @p.Nombre
            {
                public const string ETIQUETA = "@p.Etiqueta";
                public const int VALOR_MINIMO = @p.EspecificacionesDecimalLargo.ValorMinimo;
                public const int VALOR_MAXIMO = @p.EspecificacionesDecimalLargo.ValorMaximo;
                public const int DIGITOS_DECIMALES = @p.EspecificacionesDecimalLargo.DigitosDecimales;
            }
            </text>
                    break;
                default:
            <text>
            public class @p.Nombre
            {
                public const string ETIQUETA = "@p.Etiqueta";
            }
            </text>
                    break;
            }
        }
    }
        }

        public class Mensajes
        {
            public const string AGREGAR_OK = @(clases.Metadata).ETIQUETA + " agregad@(textoOperacionSufijoGenero) correctamente.";
            public const string AGREGAR_ERROR = "No se @textoPudo agregar @textoArticulo " + @(clases.Metadata).ETIQUETA;

            public const string EDITAR_OK = @(clases.Metadata).ETIQUETA + " actualizad@(textoOperacionSufijoGenero) correctamente.";
            public const string EDITAR_ERROR = "No se @textoPudo actualizar @textoArticulo " + @(clases.Metadata).ETIQUETA;

            public const string ELIMINAR_OK = @(clases.Metadata).ETIQUETA + " eliminad@(textoOperacionSufijoGenero) correctamente.";
            public const string ELIMINAR_ERROR = "No se @textoPudo eliminar @textoArticulo " + @(clases.Metadata).ETIQUETA;
        }
    }
}
