@model namasdev.Apps.Entidades.Entidad
@{
    string nombreTabla = Model.NombrePlural; 
    string fkPropiedad;
}
create table dbo.@Html.Raw(nombreTabla)
(
@foreach (var p in Model.Propiedades)
{
    <text>@Html.Raw(p.Nombre) @Html.Raw(!string.IsNullOrWhiteSpace(p.CalculadaFormula) ? string.Format("AS {0}", p.CalculadaFormula) : string.Format("{0} {1}", p.Tipo.TSQLTypeConEspecificaciones(p), (p.PermiteNull ? "null" : " not null"))),</text>
}

@if (Model.Claves != null && Model.Claves.Any())
{
    <text>constraint PK_@Html.Raw(nombreTabla) primary key clustered(@Html.Raw(string.Join(",", Model.Claves.Select(c => c.Propiedad.Nombre)))),</text>
}
@if (Model.AsociacionesOrigen != null)
{
foreach (var a in Model.AsociacionesOrigen)
{
    fkPropiedad = a.OrigenPropiedad.Nombre;
    <text>constraint FK_@(Html.Raw(nombreTabla))_@Html.Raw(fkPropiedad) foreign key (@Html.Raw(fkPropiedad)) references dbo.@Html.Raw(a.DestinoPropiedad.Entidad.NombrePlural) (@Html.Raw(a.DestinoPropiedad.Nombre)),</text>
}
}
)
go

@if (Model.Indices != null)
{
foreach (var i in Model.Indices)
{
<text>create @(i.EsUnique ? "unique" : "") nonclustered index IX_@(Html.Raw(nombreTabla))_@(Html.Raw(string.Join("Y",i.Propiedades.Select(ip => ip.Propiedad.Nombre)))) on dbo.@Html.Raw(nombreTabla) (@Html.Raw(string.Join(",",i.Propiedades.Select(ip => ip.Propiedad.Nombre))))
go</text>
}
}
