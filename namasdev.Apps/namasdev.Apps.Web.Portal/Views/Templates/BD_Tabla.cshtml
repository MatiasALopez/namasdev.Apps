@using namasdev.Apps.Web.Portal.Helpers;
@model namasdev.Apps.Entidades.Entidad
@{
    string nombreTabla = Model.NombrePlural;
    string fkPropiedad;
}
create table dbo.@Html.Raw(nombreTabla)
(
@foreach (var p in Model.Propiedades)
{
    <text>@Html.Raw(p.Nombre) @Html.Raw(!string.IsNullOrWhiteSpace(p.CalculadaFormula) ? string.Format("AS {0}", p.CalculadaFormula) : string.Format("{0} {1}", p.Tipo.TSQLTypeConEspecificaciones(p), (p.PermiteNull ? "null" : "not null"))),</text>
}

@if (Model.Claves != null && Model.Claves.Any())
{
    <text>constraint PK_@Html.Raw(nombreTabla) primary key clustered (@Html.Raw(string.Join(",", Model.Claves.Select(c => c.Propiedad.Nombre)))),</text>
}
@if (Model.AsociacionesOrigen != null)
{
foreach (var a in Model.AsociacionesOrigen.OrderBy(ao => ao.OrigenPropiedad.Orden))
{
    fkPropiedad = a.OrigenPropiedad.Nombre;
    <text>constraint @(Html.Raw(a.Nombre)) foreign key (@Html.Raw(fkPropiedad)) references dbo.@Html.Raw(a.DestinoPropiedad.Entidad.NombrePlural) (@Html.Raw(a.DestinoPropiedad.Nombre))@(FormatoHelper.DefinicionAsociacionRegla("update", a.UpdateRegla))@(FormatoHelper.DefinicionAsociacionRegla("delete", a.DeleteRegla)),</text>
}
}
)
go
@if (Model.Indices != null)
{
    foreach (var i in Model.Indices.OrderBy(i => i.EsUnique ? 0 : 1).ThenBy(i => i.Propiedades.Min(p => p.Propiedad.Orden)))
    {
<text>
create @(i.EsUnique ? "unique " : "")nonclustered index @(Html.Raw(i.Nombre)) on dbo.@Html.Raw(nombreTabla) (@Html.Raw(string.Join(",", i.Propiedades.OrderBy(p => p.Propiedad.Orden).Select(ip => ip.Propiedad.Nombre))))
go</text>
    }
}
