@using namasdev.Apps.Entidades.Valores;
@model namasdev.Apps.Entidades.Entidad
@{
    string nombreTabla = Model.NombrePlural;

    string claseBase =
        Model.PropiedadesDefault.IDPropiedadTipoId.HasValue
        ? $"Entidad{(Model.PropiedadesDefault.AuditoriaCreado ? "Creado" : "")}{(Model.PropiedadesDefault.AuditoriaUltimaModificacion ? "Modificado" : "")}{(Model.PropiedadesDefault.AuditoriaBorrado ? "Borrado" : "")}<{Model.PropiedadesDefault.IDTipo.CLRType}>"
        : null;

    var propiedadesNavegacion = new List<string>();
    string propiedadTipo,
        propiedadNombre;
    foreach (var a in Model.AsociacionesOrigen)
    {
        if (a.DestinoAsociacionMultiplicidadId == AsociacionMultiplicidades.MUCHOS)
        {
            propiedadTipo = $"List<{a.DestinoEntidad.Nombre}>";
            propiedadNombre = a.DestinoEntidad.NombrePlural;
        }
        else
        {
            propiedadTipo = a.DestinoEntidad.Nombre;
            propiedadNombre =
                a.OrigenAsociacionMultiplicidadId == AsociacionMultiplicidades.MUCHOS
                ? namasdev.Core.Types.StringExtensiones.TrimEnd(a.OrigenPropiedad.Nombre, "Id")
                : a.DestinoEntidad.Nombre;
        }

        propiedadesNavegacion.Add($"{propiedadTipo} {propiedadNombre}");
    }
    foreach (var a in Model.AsociacionesDestino)
    {
        if (a.OrigenAsociacionMultiplicidadId == AsociacionMultiplicidades.MUCHOS)
        {
            propiedadTipo = $"List<{a.OrigenEntidad.Nombre}>";
            propiedadNombre = a.OrigenEntidad.NombrePlural;
        }
        else
        {
            propiedadTipo = a.OrigenEntidad.Nombre;
            propiedadNombre = namasdev.Core.Types.StringExtensiones.TrimEnd(a.OrigenPropiedad.Nombre, "Id");
        }
        propiedadesNavegacion.Add($"{propiedadTipo} {propiedadNombre}");
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Script</title>
</head>
<body>
    <code>
        using System;

        namespace @(Model.AplicacionVersion.Aplicacion.Nombre)
        {
            public partial class @Model.Nombre @(!string.IsNullOrWhiteSpace(claseBase) ? $": {claseBase}" : "")
            {
            @foreach (var p in Model.Propiedades)
            {
                if (p.EsPropiedadDefault())
                {
                    continue;
                }
                <text>public @p.Tipo.CLRType@(p.PermiteNull && p.Tipo.CLRType != "string" ? "?" : "") @p.Nombre { get; set; }</text>
            }

            @foreach (var p in propiedadesNavegacion)
            {
                <text>public virtual @p { get; set; }</text>
            }
            }
        }
    </code>
</body>
</html>
