@using namasdev.Core.Types;
@using namasdev.Apps.Entidades.Valores;
@model namasdev.Apps.Entidades.Entidad
@{
    var namespaces = new
    {
        Aplicacion = Model.AplicacionVersion.Aplicacion.Nombre
    };
    var clases = new
    {
        Metadata = string.Format("{0}Metadata", Model.Nombre),
        MetadataMensajes = string.Format("{0}Metadata.Mensajes", Model.Nombre),
        ItemModel = string.Format("{0}ItemModel", Model.Nombre),
        ListaViewModel = string.Format("{0}ViewModel", Model.NombrePlural),
        Controller = string.Format("{0}Controller", Model.NombrePlural),
    };
    string propiedadIdNombre = null;
    var propiedades = new Dictionary<string, string>();
    foreach (var p in Model.Propiedades)
    {
        if (p.EsCalculada || p.EsAuditoria())
        {
            continue;
        }
        if (p.EsId()) { propiedadIdNombre = p.Nombre; }
        switch (p.PropiedadTipoId)
        {
            case PropiedadTipos.ENTERO:
            case PropiedadTipos.ENTERO_CORTO:
            case PropiedadTipos.ENTERO_LARGO:
                propiedades.Add(p.Nombre, string.Format("Formateador.FormatoNumero(item.{0})", p.Nombre));
                break;
            case PropiedadTipos.DECIMAL:
                propiedades.Add(p.Nombre, string.Format("Formateador.FormatoNumero(item.{0}, cantDecimales: {1})", p.Nombre, p.EspecificacionesDecimal.DigitosDecimales));
                break;
            case PropiedadTipos.DECIMAL_FLOTANTE:
                propiedades.Add(p.Nombre, string.Format("Formateador.FormatoNumero(item.{0}, cantDecimales: {1})", p.Nombre, p.EspecificacionesDecimalFlotante.DigitosDecimales));
                break;
            case PropiedadTipos.IMPORTE:
                propiedades.Add(p.Nombre, string.Format("Formateador.FormatoMoneda(item.{0}, cantDecimales: 2)", p.Nombre));
                break;
            case PropiedadTipos.FECHA_HORA:
                propiedades.Add(p.Nombre, string.Format("Formateador.FormatoFechaYHora(item.{0})", p.Nombre));
                break;
            case PropiedadTipos.FECHA:
                propiedades.Add(p.Nombre, string.Format("Formateador.FormatoFecha(item.{0})", p.Nombre));
                break;
            case PropiedadTipos.HORA:
                propiedades.Add(p.Nombre, string.Format("Formateador.FormatoHora(item.{0})", p.Nombre));
                break;
            case PropiedadTipos.BOOLEANO:
                propiedades.Add(p.Nombre, string.Format("Formateador.SiNo(item.{0})", p.Nombre));
                break;
            default:
                propiedades.Add(p.Nombre, string.Format("@Html.Raw(item.{0})", p.Nombre));
                break;
        }
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Controller</title>
</head>
<body>
<pre><code>
@@using namasdev.Core.Types;
@@using namasdev.Web.Helpers;
@@using @(namespaces.Aplicacion).Entidades;
@@using @(namespaces.Aplicacion).Entidades.Metadata;
@@model @(namespaces.Aplicacion).Web.Portal.ViewModels.@(Model.NombrePlural).@(clases.ListaViewModel)
@@{
    ViewBag.Title = @(clases.Metadata).ETIQUETA_PLURAL;

    var controlesIds = new
    {
        Form = string.Format("frm{0}", @(clases.Metadata).NOMBRE_PLURAL)),
        TablaContainer = string.Format("div{0}Container", @(clases.Metadata).NOMBRE_PLURAL),
        Tabla = string.Format("tbl{0}", @(clases.Metadata).NOMBRE_PLURAL),
    };
    var displayNames = new
    {
        Busqueda = Html.DisplayNameWithoutEncodingFor(m => m.Busqueda).ToString()
    };
    var clasesCss = new
    {
        BotonEliminar = "btn-eliminar"
    };
}
&lt;h2 class="my-2"&gt;@@ViewBag.Title&lt;/h2&gt;
@@Html.Partial("_ResultadoOk")
@@Html.Partial("_Errores")
&lt;div class="row my-3"&gt;
    &lt;div class="col-md-3"&gt;
        &lt;a href="@@Url.Action(nameof(@(clases.Controller).Agregar))" class="btn btn-primary"&gt;Agregar&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="col-md-9 text-right filtros"&gt;
        @@using (Html.BeginForm(nameof(@(clases.Controller).Index), @(clases.Controller).NAME, FormMethod.Get, new { @@class = "form-inline pull-right" }))
        {
            @@Html.TextBoxFor(m =&gt; m.Busqueda, new { @@class = "form-control ml-1", placeholder = displayNames.Busqueda, title = displayNames.Busqueda, data_toggle = "tooltip" })
            &lt;button type="submit" class="btn btn-secondary ml-1"&gt;Buscar&lt;/button&gt;
        }
    &lt;/div&gt;
&lt;/div&gt;
&lt;div class="row"&gt;
    &lt;div class="col-md-12"&gt;
        @@if (Model.TieneItems)
        {
            &lt;div id="@@controlesIds.TablaContainer" class="table-responsive"&gt;
                &lt;form id="@@controlesIds.Form"&gt;
                    @@Html.AntiForgeryToken()
                &lt;/form&gt;
                &lt;table id="@@controlesIds.Tabla" class="table table-striped table-bordered"&gt;
                    &lt;thead&gt;
                        &lt;tr&gt;
                        @foreach (var p in propiedades)
                        { 
                        <text>&lt;th&gt;&lt;a href="@@URLHelper.GenerarUrlConOrden(Request.Url, nameof(@(clases.ItemModel).@p.Key))"&gt;@@Html.DisplayNameFor(m =&gt; m.Items[0].@p.Key) &lt;i class="fa fa-sort ml-2"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/th&gt;</text>
                        }
                            &lt;th&gt;&lt;/th&gt;
                        &lt;/tr&gt;
                    &lt;/thead&gt;
                    &lt;tbody&gt;
                        @@foreach (var item in Model.Items)
                        {
                            &lt;tr&gt;
                            @foreach (var p in propiedades)
                            { 
                            <text>&lt;td&gt;@p.Value&lt;/td&gt;</text>
                            }
                                &lt;td class="text-center"&gt;
                                    &lt;a href="@@Url.Action(nameof(@(clases.Controller).Editar), new { id = item.@propiedadIdNombre })" class="btn btn-sm btn-outline-secondary"&gt;&lt;i class="fa fa-edit" data-toggle="tooltip" title="Editar"&gt;&lt;/i&gt;&lt;/a&gt;
                                    &lt;button class="btn btn-sm btn-outline-danger @@clasesCss.BotonEliminar" data-id="@@item.@propiedadIdNombre"&gt;&lt;i data-toggle="tooltip" title="Eliminar" class="fa fa-trash"&gt;&lt;/i&gt;&lt;/button&gt;
                                &lt;/td&gt;
                            &lt;/tr&gt;
                        }
                    &lt;/tbody&gt;
                &lt;/table&gt;
            &lt;/div&gt;
            @@Html.Partial("_Paginador", Model.Paginacion)
        }
        else
        {
            &lt;div class="alert alert-warning"&gt;No hay @@@(clases.Metadata).ETIQUETA_PLURAL para mostrar.&lt;/div&gt;
        }
    &lt;/div&gt;
&lt;/div&gt;
@@section bodyScripts {
    &lt;script type="text/javascript"&gt;
    $(function () {
        namasdevApps.setActiveMenuOption('@Model.NombrePlural.ToFirstLetterLowercase()');

        $('#@@controlesIds.Tabla')
            .on('click', '.@@clasesCss.BotonEliminar', function (ev) {
                ev.preventDefault();

                var id = $(this).data('id');
                if (!id) {
                    return;
                }

                var options = {
                    showLoadingSelector: '#@@controlesIds.TablaContainer',
                    confirm: true,
                    confirmTitle: 'Eliminar @@@(clases.Metadata).ETIQUETA',
                    confirmMessage: '@@@(clases.MetadataMensajes).ELIMINAR_CONFIRMACION'
                };
                namasdevApps.postJson(
                    '@@Url.Action(nameof(@(clases.Controller).Eliminar))/' + id,
                    nmd.ui.forms.createDataWithAntiForgeryToken('#@@controlesIds.Form'),
                    function (response) {
                        if (response.success) {
                            nmd.ui.controls.showSuccessModal(
                                '@@@(clases.MetadataMensajes).ELIMINAR_OK',
                                function () {
                                    nmd.page.reloadPage();
                                });
                        }
                        else {
                            namasdevApps.showErrorModal(response.message);
                        }
                    },
                    options
                );

                return false;
            });
    });
    &lt;/script&gt;
}
</code></pre>
</body>
</html>
