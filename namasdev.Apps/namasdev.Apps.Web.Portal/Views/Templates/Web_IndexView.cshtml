@using namasdev.Core.Types;
@using namasdev.Apps.Entidades.Valores;
@model namasdev.Apps.Entidades.Entidad
@{
    var namespaces = new
    {
        Aplicacion = Model.AplicacionVersion.Aplicacion.Nombre
    };
    var clases = new
    {
        Entidad = Model.Nombre,
        Metadata = string.Format("{0}Metadata", Model.Nombre),
        MetadataMensajes = string.Format("{0}Metadata.Mensajes", Model.Nombre),
        ItemModel = string.Format("{0}ItemModel", Model.Nombre),
        ListaViewModel = string.Format("{0}ViewModel", Model.NombrePlural),
        Controller = string.Format("{0}Controller", Model.NombrePlural),
    };
    string propiedadIdNombre = null;
    var propiedades = new Dictionary<string, string>();
    foreach (var p in Model.Propiedades)
    {
        if (p.EsCalculada || p.EsAuditoria())
        {
            continue;
        }
        if (p.EsId()) { propiedadIdNombre = p.NombreOId; }
        switch (p.PropiedadTipoId)
        {
            case PropiedadTipos.ENTERO:
            case PropiedadTipos.ENTERO_CORTO:
            case PropiedadTipos.ENTERO_LARGO:
                propiedades.Add(p.NombreOId, string.Format("@Formateador.Numero(item.{0})", p.NombreOId));
                break;
            case PropiedadTipos.DECIMAL:
                propiedades.Add(p.NombreOId, string.Format("@Formateador.Numero(item.{0}, cantDecimales: {1})", p.NombreOId, p.EspecificacionesDecimal.DigitosDecimales));
                break;
            case PropiedadTipos.DECIMAL_FLOTANTE:
                propiedades.Add(p.NombreOId, string.Format("@Formateador.Numero(item.{0}, cantDecimales: {1})", p.NombreOId, p.EspecificacionesDecimalFlotante.DigitosDecimales));
                break;
            case PropiedadTipos.IMPORTE:
                propiedades.Add(p.NombreOId, string.Format("@Formateador.Moneda(item.{0}, cantDecimales: 2)", p.NombreOId));
                break;
            case PropiedadTipos.FECHA_HORA:
                propiedades.Add(p.NombreOId, string.Format("@Formateador.FechaYHora(item.{0})", p.NombreOId));
                break;
            case PropiedadTipos.FECHA:
                propiedades.Add(p.NombreOId, string.Format("@Formateador.Fecha(item.{0})", p.NombreOId));
                break;
            case PropiedadTipos.HORA:
                propiedades.Add(p.NombreOId, string.Format("@Formateador.Hora(item.{0})", p.NombreOId));
                break;
            case PropiedadTipos.BOOLEANO:
                propiedades.Add(p.NombreOId, string.Format("@Formateador.SiNo(item.{0})", p.NombreOId));
                break;
            default:
                propiedades.Add(p.NombreOId, string.Format("@Html.Raw(item.{0})", p.NombreOId));
                break;
        }
    }
}
@@using namasdev.Core.Types;
@@using namasdev.Web.Helpers;
@@using @(namespaces.Aplicacion).Entidades;
@@using @(namespaces.Aplicacion).Entidades.Metadata;
@@using @(namespaces.Aplicacion).Web.Portal.Controllers;
@@model @(namespaces.Aplicacion).Web.Portal.ViewModels.@(Model.NombrePlural).@(clases.ListaViewModel)
@@{
    ViewBag.Title = @(clases.Metadata).ETIQUETA_PLURAL;

    var controlesIds = new
    {
        Form = string.Format("frm{0}", @(clases.Metadata).NOMBRE_PLURAL),
        TablaContainer = string.Format("div{0}Container", @(clases.Metadata).NOMBRE_PLURAL),
        Tabla = string.Format("tbl{0}", @(clases.Metadata).NOMBRE_PLURAL),
    };
    var displayNames = new
    {
        Busqueda = Html.DisplayNameWithoutEncodingFor(m => m.Busqueda).ToString()
    };
    var clasesCss = new
    {
        BotonEliminar = "btn-eliminar"
    };
}
<h2 class="my-2">@@ViewBag.Title</h2>
@@Html.Partial("_ResultadoOk")
@@Html.Partial("_Errores")
<div class="row my-3">
    <div class="col-md-3">
        <a href="@string.Format("@Url.Action(nameof({0}.Agregar))", clases.Controller)" class="btn btn-primary">Agregar</a>
    </div>
    <div class="col-md-9 text-right filtros">
        @@using (Html.BeginForm(@string.Format("nameof({0}.Index)", clases.Controller), @(clases.Controller).NAME, FormMethod.Get, new { @@class = "form-inline pull-right" }))
        {
            @@Html.TextBoxFor(m => m.Busqueda, new { @@class = "form-control ml-1", placeholder = displayNames.Busqueda, title = displayNames.Busqueda, data_toggle = "tooltip" })
            <button type="submit" class="btn btn-secondary ml-1">Buscar</button>
        }
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        @@if (Model.TieneItems)
        {
            <div id="@("@controlesIds.TablaContainer")" class="table-responsive">
                <form id="@("@controlesIds.Form")">
                    @@Html.AntiForgeryToken()
                </form>
                <table id="@("@controlesIds.Tabla")" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            @foreach (var p in propiedades)
                            {
                            <text><th><a href="@string.Format("@URLHelper.GenerarUrlConOrden(Request.Url, nameof({0}.{1}))", clases.Entidad, p.Key)">@@Html.DisplayNameFor(m => m.Items[0].@(p.Key)) <i class="fa fa-sort ml-2"></i></a></th></text>
                            }
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @@foreach (var item in Model.Items)
                        {
                            <tr>
                                @foreach (var p in propiedades)
                                {
                                <text><td>@p.Value</td></text>
                                }
                                <td class="text-center">
                                    <a href="@string.Format("@Url.Action(nameof({0}.Editar), new {{ id = item.{1} }})", clases.Controller, propiedadIdNombre)" class="btn btn-sm btn-outline-secondary"><i class="fa fa-edit" data-toggle="tooltip" title="Editar"></i></a>
                                    <button class="btn btn-sm btn-outline-danger @("@clasesCss.BotonEliminar")" data-id="@string.Format("@item.{0}", propiedadIdNombre))"><i data-toggle="tooltip" title="Eliminar" class="fa fa-trash"></i></button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @@Html.Partial("_Paginador", Model.Paginacion)
        }
        else
        {
            <div class="alert alert-warning">No hay @@@(clases.Metadata).ETIQUETA_PLURAL para mostrar.</div>
        }
    </div>
</div>
@@section bodyScripts {
<script type="text/javascript">
    $(function () {
        namasdevApps.setActiveMenuOption('@Model.NombrePlural.ToFirstLetterLowercase()');

        $('#@@controlesIds.Tabla')
            .on('click', '.@@clasesCss.BotonEliminar', function (ev) {
                ev.preventDefault();

                var id = $(this).data('id');
                if (!id) {
                    return;
                }

                var options = {
                    showLoadingSelector: '#@@controlesIds.TablaContainer',
                    confirm: true,
                    confirmTitle: 'Eliminar @@@(clases.Metadata).ETIQUETA',
                    confirmMessage: '@@@(clases.MetadataMensajes).ELIMINAR_CONFIRMACION'
                };
                namasdevApps.postJson(
                    '@@Url.Action(nameof(@(clases.Controller).Eliminar))/' + id,
                    nmd.ui.forms.createDataWithAntiForgeryToken('#@@controlesIds.Form'),
                    function (response) {
                        if (response.success) {
                            nmd.ui.controls.showSuccessModal(
                                '@@@(clases.MetadataMensajes).ELIMINAR_OK',
                                function () {
                                    nmd.page.reloadPage();
                                });
                        }
                        else {
                            namasdevApps.showErrorModal(response.message);
                        }
                    },
                    options
                );

                return false;
            });
    });
</script>
}