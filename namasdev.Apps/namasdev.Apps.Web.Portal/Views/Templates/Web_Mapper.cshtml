@model namasdev.Apps.Entidades.Entidad
@{
    var namespaces = new
    {
        Aplicacion = Model.AplicacionVersion.Aplicacion.Nombre
    };
    var clases = new
    {
        Mapper = string.Format("{0}Mapper", Model.NombrePlural),
        Entidad = Model.Nombre,
        ItemModel = string.Format("{0}ItemModel", Model.Nombre),
        ListaViewModel = string.Format("{0}ViewModel", Model.NombrePlural),
        EntidadViewModel = string.Format("{0}ViewModel", Model.Nombre),
    };
    var variables = new
    {
        ViewModel = "model",
        Entidad = "entidad",
        Entidades = "entidades",
    };

    var entidadAItemModelAsignaciones = new List<string>();
    var entidadAViewModelEntidadAsignaciones = new List<string>();
    var viewModelAEntidadAsignaciones = new List<string>();
    foreach (var p in Model.Propiedades)
    {
        if (p.EsCalculada
            || p.EsAuditoria())
        {
            continue;
        }

        entidadAItemModelAsignaciones.Add(string.Format("{0} = e.{1}", p.NombreOId, p.NombreOId));
        entidadAViewModelEntidadAsignaciones.Add(string.Format("{0} = entidad.{1}", p.NombreOId, p.NombreOId));
        viewModelAEntidadAsignaciones.Add(string.Format("{0} = {1}.{2}{3}", p.NombreOId, variables.ViewModel, p.NombreOId, p.EsId() ? " ?? default" : (!p.PermiteNull && p.Tipo.CLRTypeEsNullable ? ".Value" : "")));
    }
}
using System;
using System.Collections.Generic;
using System.Linq;

using namasdev.Core.Validation;
using @(namespaces.Aplicacion).Entidades;
using @(namespaces.Aplicacion).Web.Portal.Models.@Model.NombrePlural;
using @(namespaces.Aplicacion).Web.Portal.ViewModels.@Model.NombrePlural;

namespace @(namespaces.Aplicacion).Web.Portal.Mappers
{
    public class @clases.Mapper
    {
        public static List@(Html.Raw(string.Format("<{0}>", clases.ItemModel))) MapearEntidadesAModelos(IEnumerable@(Html.Raw(string.Format("<{0}>", clases.Entidad))) @variables.Entidades)
        {
            Validador.ValidarArgumentListaRequeridaYThrow(@variables.Entidades, nameof(@variables.Entidades), validarNoVacia: false);

            return @variables.Entidades
                .Select(e => new @clases.ItemModel
                {
                @foreach (var p in entidadAItemModelAsignaciones)
                {
                    <text>@p,</text>
                }
                })
                .ToList();
        }

        public static @(clases.EntidadViewModel) MapearEntidadA@(clases.EntidadViewModel)(@clases.Entidad @variables.Entidad)
        {
            Validador.ValidarArgumentRequeridoYThrow(@variables.Entidad, nameof(@variables.Entidad));

            return new @(clases.EntidadViewModel)
            {
            @foreach (var p in entidadAViewModelEntidadAsignaciones)
            {
                <text>@p,</text>
            }
            };
        }

        public static @clases.Entidad Mapear@(clases.EntidadViewModel)AEntidad(@clases.EntidadViewModel @variables.ViewModel)
        {
            Validador.ValidarArgumentRequeridoYThrow(@variables.ViewModel, nameof(@variables.ViewModel));

            return new @clases.Entidad
            {
            @foreach (var p in viewModelAEntidadAsignaciones)
            {
                <text>@p,</text>
            }
            };
        }
    }
}
