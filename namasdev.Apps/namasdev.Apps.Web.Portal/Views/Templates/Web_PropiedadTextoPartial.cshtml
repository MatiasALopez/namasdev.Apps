@model namasdev.Apps.Entidades.EntidadPropiedad
@{
    var labelHtmlAttributes = new Dictionary<string, string>();
    var controlHtmlAttributes = new Dictionary<string, string>();

    if (Model.PermiteNull)
    {
        controlHtmlAttributes.Add("class", "form-control");
    }
    else
    {
        labelHtmlAttributes.Add("class", "requerido");
        controlHtmlAttributes.Add("class", "form-control form-control-required");
    }

    string controlTipo = "TextBox";
    var especificacionesTexto = Model.EspecificacionesTexto;
    if (especificacionesTexto != null)
    {
        if (especificacionesTexto.EsMultilinea)
        {
            controlTipo = "TextArea";
        }
        if (especificacionesTexto.TamañoMaximo.HasValue
            || especificacionesTexto.TamañoExacto.HasValue)
        {
            controlHtmlAttributes.Add("maxlength", (especificacionesTexto.TamañoExacto ?? especificacionesTexto.TamañoMaximo).ToString());
        }
    }
    string labelHtmlAttributesString = labelHtmlAttributes.Count > 0
        ? string.Format(", new {{ {0} }}", namasdev.Core.Types.Formateador.Lista(labelHtmlAttributes.Select(a => string.Format("@{0} = \"{1}\"", a.Key, a.Value)), separador: ", "))
        : "";
    string controlHtmlAttributesString = controlHtmlAttributes.Count > 0
        ? string.Format(", new {{ {0} }}", namasdev.Core.Types.Formateador.Lista(controlHtmlAttributes.Select(a => string.Format("@{0} = \"{1}\"", a.Key, a.Value)), separador: ", "))
        : "";
}
<div class="form-group col-md-6">
    @@Html.LabelFor(m => m.@(Model.Nombre)@(Html.Raw(labelHtmlAttributesString)))
    @@Html.@(controlTipo)(m => m.@(Model.Nombre)@(Html.Raw(controlHtmlAttributesString)))
    @@Html.ValidationMessageFor(m => m.@(Model.Nombre))
</div>