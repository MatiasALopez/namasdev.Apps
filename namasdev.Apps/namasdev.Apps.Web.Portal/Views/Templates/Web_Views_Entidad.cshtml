@using namasdev.Core.Types;
@using namasdev.Apps.Entidades.Valores;
@using namasdev.Apps.Web.Portal.Helpers;
@model namasdev.Apps.Entidades.Entidad
@{
    var namespaces = new
    {
        Aplicacion = Model.AplicacionVersion.Aplicacion.Nombre
    };
    var clases = new
    {
        Entidad = Model.Nombre,
        Metadata = string.Format("{0}Metadata", Model.Nombre),
        EntidadViewModel = string.Format("{0}ViewModel", Model.Nombre),
        Controller = string.Format("{0}Controller", Model.NombrePlural),
    };

    string propiedadIdNombre = Model.Propiedades
        .Where(p => p.EsId())
        .Select(p => p.NombreOId)
        .FirstOrDefault();

    string controlTipo;
    List<string> controlCssClasses;
    List<string> controlAdditionalParameters;
    Dictionary<string, string> labelHtmlAttributes,
        controlHtmlAttributes;
}
@@using namasdev.Core.Types;
@@using namasdev.Web.Helpers;
@@using @(Html.Raw(namespaces.Aplicacion)).Entidades;
@@using @(Html.Raw(namespaces.Aplicacion)).Entidades.Metadata;
@@using @(Html.Raw(namespaces.Aplicacion)).Web.Portal.Controllers;
@@model @(Html.Raw(namespaces.Aplicacion)).Web.Portal.ViewModels.@(Html.Raw(Model.NombrePlural)).@(Html.Raw(clases.EntidadViewModel))
@@{
    ViewBag.Title = $"{Model.PaginaModo} {@(Html.Raw(clases.Metadata)).NOMBRE}";

    var controlesIds = new
    {
        Form = $"frm{@(Html.Raw(clases.Metadata)).NOMBRE}"
    };
}
<h2 class="my-3">@ViewBag.Title</h2>
<form id="@("@controlesIds.Form")" action="@("@Url.Action()")" method="post" class="mt-3">
    @@Html.AntiForgeryToken()
    @@Html.ValidationSummary(excludePropertyErrors: true)
    @@Html.Partial("_Errores")
    @@Html.Partial("_ResultadoOk")
    @if (propiedadIdNombre != null)
    {
    <text>@@Html.HiddenFor(m => m.@(Html.Raw(propiedadIdNombre)))</text>
    }
    @@Html.HiddenFor(m => m.PaginaModo)
    <div class="form-row">
    @foreach (var p in Model.Propiedades)
    {
        if (p.EsCalculada || p.EsAuditoria() || p.EsId())
        {
            continue;
        }
        labelHtmlAttributes = new Dictionary<string, string>();
        controlTipo = "TextBox";
        controlAdditionalParameters = new List<string>();
        controlCssClasses = new List<string> { "form-control" };
        controlHtmlAttributes = new Dictionary<string, string>();
        if (!p.PermiteNull)
        {
            labelHtmlAttributes.Add("class", "requerido");
            controlCssClasses.Add("form-control-required");
        }
        switch (p.PropiedadTipoId)
        {
            case PropiedadTipos.TEXTO:
                if (p.EspecificacionesTexto != null)
                {
                    if (p.EspecificacionesTexto.EsMultilinea)
                    {
                        controlTipo = "TextArea";
                    }
                    if (p.EspecificacionesTexto.TamañoMaximo.HasValue
                        || p.EspecificacionesTexto.TamañoExacto.HasValue)
                    {
                        controlHtmlAttributes.Add("maxlength", (p.EspecificacionesTexto.TamañoExacto ?? p.EspecificacionesTexto.TamañoMaximo).ToString());
                    }
                }
                break;
            case PropiedadTipos.ENTERO:
                controlCssClasses.Add("inputmask-integer");
                if (p.EspecificacionesEntero != null)
                {
                    if (p.EspecificacionesEntero.ValorMinimo.HasValue)
                    {
                        controlHtmlAttributes.Add("data_inputmask_min", p.EspecificacionesEntero.ValorMinimo.ToString());
                    }
                    if (p.EspecificacionesEntero.ValorMaximo.HasValue)
                    {
                        controlHtmlAttributes.Add("data_inputmask_max", p.EspecificacionesEntero.ValorMaximo.ToString());
                    }
                }
                break;
            case PropiedadTipos.ENTERO_CORTO:
                controlCssClasses.Add("inputmask-integer");
                if (p.EspecificacionesEnteroCorto != null)
                {
                    if (p.EspecificacionesEnteroCorto.ValorMinimo.HasValue)
                    {
                        controlHtmlAttributes.Add("data_inputmask_min", p.EspecificacionesEnteroCorto.ValorMinimo.ToString());
                    }
                    if (p.EspecificacionesEnteroCorto.ValorMaximo.HasValue)
                    {
                        controlHtmlAttributes.Add("data_inputmask_max", p.EspecificacionesEnteroCorto.ValorMaximo.ToString());
                    }
                }
                break;
            case PropiedadTipos.ENTERO_LARGO:
                controlCssClasses.Add("inputmask-integer");
                if (p.EspecificacionesEnteroLargo != null)
                {
                    if (p.EspecificacionesEnteroLargo.ValorMinimo.HasValue)
                    {
                        controlHtmlAttributes.Add("data_inputmask_min", p.EspecificacionesEnteroLargo.ValorMinimo.ToString());
                    }
                    if (p.EspecificacionesEnteroLargo.ValorMaximo.HasValue)
                    {
                        controlHtmlAttributes.Add("data_inputmask_max", p.EspecificacionesEnteroLargo.ValorMaximo.ToString());
                    }
                }
                break;
            case PropiedadTipos.DECIMAL:
                controlCssClasses.Add("inputmask-numeric");
                if (p.EspecificacionesDecimal != null)
                {
                    controlHtmlAttributes.Add("data_inputmask_digits", p.EspecificacionesDecimal.DigitosDecimales.ToString());
                    controlHtmlAttributes.Add("data_inputmask_min", (p.EspecificacionesDecimal.ValorMinimo ?? p.EspecificacionesDecimal.ValorMinimoDesdeDigitos).ToString());
                    controlHtmlAttributes.Add("data_inputmask_max", (p.EspecificacionesDecimal.ValorMaximo ?? p.EspecificacionesDecimal.ValorMaximoDesdeDigitos).ToString());
                }
                break;
            case PropiedadTipos.DECIMAL_FLOTANTE:
                controlCssClasses.Add("inputmask-numeric");
                if (p.EspecificacionesDecimalFlotante != null)
                {
                    controlHtmlAttributes.Add("data_inputmask_digits", p.EspecificacionesDecimalFlotante.DigitosDecimales.ToString());
                    controlHtmlAttributes.Add("data_inputmask_min", (p.EspecificacionesDecimalFlotante.ValorMinimo ?? p.EspecificacionesDecimalFlotante.ValorMinimoDesdeDigitos).ToString());
                    controlHtmlAttributes.Add("data_inputmask_max", (p.EspecificacionesDecimalFlotante.ValorMaximo ?? p.EspecificacionesDecimalFlotante.ValorMaximoDesdeDigitos).ToString());
                }
                break;
            case PropiedadTipos.IMPORTE:
                controlCssClasses.Add("inputmask-numeric");
                controlHtmlAttributes.Add("data_inputmask_digits", "2");
                break;
            case PropiedadTipos.FECHA_HORA:
                controlAdditionalParameters = new List<string> { "\"{0:dd/MM/yyyy}\"" };
                controlCssClasses.Add("datepicker");
                break;
            case PropiedadTipos.FECHA:
                controlAdditionalParameters = new List<string> { "\"{0:dd/MM/yyyy}\"" };
                controlCssClasses.Add("datepicker");
                break;
            case PropiedadTipos.HORA:
                controlTipo = "DropDownList";
                controlAdditionalParameters = new List<string> { "Model.HoraSelectList", "\"\"" };
                break;
            case PropiedadTipos.BOOLEANO:
                controlTipo = "DropDownList";
                controlAdditionalParameters = new List<string> { "Model.SiNoSelectList", "\"\"" };
                break;
        }
        controlHtmlAttributes.Add("class", Formateador.Lista(controlCssClasses, separador: " "));
        <div class="form-group col-md-6">
            @@Html.LabelFor(m => m.@(Html.Raw(p.NombreOId))@(Html.Raw(FormatoHelper.AtributosHtmlString(labelHtmlAttributes))))
            @@Html.@(controlTipo)For(m => m.@(Html.Raw(p.NombreOId))@Html.Raw(controlAdditionalParameters.Count > 0 ? ", " + Formateador.Lista(controlAdditionalParameters) : "")@(Html.Raw(FormatoHelper.AtributosHtmlString(controlHtmlAttributes))))
            @@Html.ValidationMessageFor(m => m.@(Html.Raw(p.NombreOId)))
        </div>
    }
    </div>
    <button type="submit" class="btn btn-primary" data-toggle-state-container="#@("@controlesIds.Form")">Guardar</button>
    <a href="@(Html.Raw(string.Format("@Url.Action(nameof({0}.Index))", clases.Controller)))" class="btn btn-secondary">Volver</a>
</form>
@@section bodyScripts {
<script type="text/javascript">
    $(function () {
        namasdevApps.setActiveMenuOption('@Html.Raw(Model.NombrePlural.ToFirstLetterLowercase())');
    });
</script>
}
